-- ✅ Obsidian UI Setup
local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"
local Library = loadstring(game:HttpGet(repo .. "Library.lua"))()

local Options = Library.Options

local Window = Library:CreateWindow({
    Title = "Made by MasterZ",
    Footer = "v11.0.0",
    Icon = 0,
    NotifySide = "Right",
    ShowCustomCursor = true,
})

local Tabs = {
    Main = Window:AddTab("Main", "user")
}

-- ✅ Global Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local PathfindingService = game:GetService("PathfindingService")

local localPlayer = Players.LocalPlayer
local clientName = "FiestaGuardVip"
local jarakIkut = 5
local toggleAktif = false
local followAllowed = false
local currentFormasiTarget = nil

local followConnection = nil
local loopTask = nil
local humanoid = nil
local myRootPart = nil
local client = nil
local isMoving = false

-- ✅ Data Bot
local botList = {
    ["8802945328"] = "XBODYGUARDVIP01",
    ["8802949363"] = "XBODYGUARDVIP02",
    ["8802939883"] = "XBODYGUARDVIP03",
    ["8802998147"] = "XBODYGUARDVIP04",
}

-- ✅ Helper Functions
local function debugPrint(msg)
    print("[DEBUG]", msg)
end

local function updateBotRefs()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
    myRootPart = character:WaitForChild("HumanoidRootPart")
    debugPrint("Bot references updated")
end

local function runStopCommand()
    followAllowed = false
    currentFormasiTarget = nil
    debugPrint("Follow stopped")
end

-- ✅ Pathfinding Function
local function moveToTarget(destination)
    if not humanoid or not myRootPart then return end
    if isMoving then return end
    isMoving = true

    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentJumpHeight = 10,
        AgentMaxSlope = 45,
    })

    path:ComputeAsync(myRootPart.Position, destination)

    if path.Status == Enum.PathStatus.Success then
        local waypoints = path:GetWaypoints()
        for _, waypoint in ipairs(waypoints) do
            if not followAllowed then break end
            humanoid:MoveTo(waypoint.Position)

            -- lompat kalau waypoint butuh lompat
            if waypoint.Action == Enum.PathWaypointAction.Jump then
                humanoid.Jump = true
            end

            local reached = humanoid.MoveToFinished:Wait(2) -- timeout 2 detik
            if not reached then
                debugPrint("⚠️ Stuck, recomputing path...")
                isMoving = false
                moveToTarget(destination) -- coba ulang
                return
            end
        end
    else
        debugPrint("⚠️ Path failed, moving directly")
        humanoid:MoveTo(destination)
    end

    isMoving = false
end

-- ✅ UI - Main Tab
local GroupBox1 = Tabs.Main:AddLeftGroupbox("Main Options")

GroupBox1:AddToggle("AktifkanFollow", {
    Text = "Enable Bot Follow",
    Default = false,
    Tooltip = "Enable to accept !ikuti commands",
    Callback = function(Value)
        toggleAktif = Value
        debugPrint("ToggleAktif set to: "..tostring(Value))
        if Value then
            Library:Notify("Bot Follow Enabled", 3)
            if followConnection then followConnection:Disconnect() end
            if loopTask then loopTask:Disconnect() end
            setupBotFollowSystem()
        else
            Library:Notify("Bot Follow Disabled", 3)
            runStopCommand()
            if loopTask then loopTask:Disconnect() end
            if followConnection then followConnection:Disconnect() end
        end
    end,
})

GroupBox1:AddInput("JarakIkutInput", {
    Default = "5",
    Text = "Follow Distance",
    Placeholder = "Example: 5",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then
            jarakIkut = number
            debugPrint("Follow distance set to: "..number)
            Library:Notify("Follow distance set to: "..number, 3)
        end
    end,
})

-- ✅ Bot Identity (pakai AddInput, bukan AddTextbox)
GroupBox1:AddInput("BotIDTextbox", {
    Default = "",
    Text = "Bot Identity",
    Placeholder = "Isi ID bot",
    Callback = function(Value)
        if botList[Value] then
            debugPrint("Bot terdeteksi: "..botList[Value])
            Library:Notify("Bot ini: "..botList[Value], 3)
        else
            debugPrint("Bot ID tidak dikenali")
            Library:Notify("Bot ID tidak dikenali", 3)
        end
    end,
})

-- ✅ Follow System
function setupBotFollowSystem()
    updateBotRefs()

    local function setupClient(player)
        if player.Name ~= clientName then
            debugPrint("Player "..player.Name.." is not the client")
            return
        end
        client = player
        debugPrint("Client "..player.Name.." setup complete")

        followConnection = player.Chatted:Connect(function(msg)
            local ok, err = pcall(function()
                msg = msg:lower()
                debugPrint("Received chat from "..player.Name..": "..msg)
                local hrp = client.Character and client.Character:FindFirstChild("HumanoidRootPart")
                if not hrp then
                    debugPrint("HumanoidRootPart not found for "..player.Name)
                    return
                end

                if msg:match("^!ikuti") then
                    followAllowed = true
                    currentFormasiTarget = client
                    Library:Notify("Bot following main client: " .. client.DisplayName, 3)
                    debugPrint("Follow started for "..client.DisplayName)
                elseif msg:match("^!stop") then
                    runStopCommand()
                end
            end)
            if not ok then
                debugPrint("Error handling chat: "..err)
            end
        end)
    end

    -- Setup existing players
    for _, player in ipairs(Players:GetPlayers()) do
        setupClient(player)
    end

    -- Setup new players
    Players.PlayerAdded:Connect(setupClient)

    -- Update bot references on respawn
    localPlayer.CharacterAdded:Connect(updateBotRefs)

    -- Heartbeat loop
    loopTask = RunService.Heartbeat:Connect(function()
        if toggleAktif and currentFormasiTarget and currentFormasiTarget.Character and humanoid and myRootPart then
            local ok, err = pcall(function()
                local targetHRP = currentFormasiTarget.Character:FindFirstChild("HumanoidRootPart")
                if targetHRP and followAllowed then
                    local followPos = targetHRP.Position - targetHRP.CFrame.LookVector * jarakIkut
                    moveToTarget(followPos) -- pakai pathfinding
                end
            end)
            if not ok then
                debugPrint("Error in Heartbeat: "..err)
            end
        end
    end)
end
