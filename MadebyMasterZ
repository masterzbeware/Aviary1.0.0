-- UI Library Setup
local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"
local Library = loadstring(game:HttpGet(repo .. "Library.lua"))()

local Options = Library.Options
local Toggles = Library.Toggles

Library.ForceCheckbox = false
Library.ShowToggleFrameInKeybinds = true

local Window = Library:CreateWindow({
    Title = "Made by MasterZ",
    Footer = "v1.0.0",
    Icon = 0,
    NotifySide = "Right",
    ShowCustomCursor = true,
})

local Tabs = {
    Main = Window:AddTab("Main", "user"),
}

-- Input Variabel
local clientName = ""
local jarakIkut = 5
local jarakMinimum = 2
local followAllowed = false  -- hanya diaktifkan lewat !ikuti
local toggleAktif = false

-- UI LEFT
local GroupBox1 = Tabs.Main:AddLeftGroupbox("Main Options1")

GroupBox1:AddToggle("AktifkanFollow", {
    Text = "Aktifkan Bot Follow",
    Default = false,
    Tooltip = "Aktifkan agar bot siap mengikuti client saat client ketik !ikuti",
    Callback = function(Value)
        toggleAktif = Value
        Library:Notify(Value and "Follow Siap Dijalankan" or "Follow Dimatikan", 3)
    end,
})

GroupBox1:AddInput("NamaClientInput", {
    Default = "",
    Text = "Nama Client",
    Placeholder = "Contoh: MasterZ_YT",
    Callback = function(Value)
        clientName = Value
        print("Client diatur ke:", clientName)
    end,
})

-- UI RIGHT
local GroupBox2 = Tabs.Main:AddRightGroupbox("Jarak & Pengaturan")

GroupBox2:AddInput("JarakIkutInput", {
    Default = "5",
    Text = "Jarak Bot",
    Placeholder = "Contoh: 5",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then
            jarakIkut = number
            print("Jarak bot diatur ke:", jarakIkut)
        end
    end,
})

GroupBox2:AddInput("JarakMinimumInput", {
    Default = "2",
    Text = "Jarak Minimum Bergerak",
    Placeholder = "Contoh: 2",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then
            jarakMinimum = number
            print("Jarak minimum diatur ke:", jarakMinimum)
        end
    end,
})

-- === SCRIPT FOLLOW ===

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local client = nil
local humanoid = nil
local myRootPart = nil

local function updateBotRefs()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
    myRootPart = character:WaitForChild("HumanoidRootPart")
end

-- Cari dan dengarkan client
local function setupClient(player)
    if player.Name ~= clientName then return end
    client = player
    print("[INFO] Client ditemukan:", player.Name)

    player.Chatted:Connect(function(msg)
        if msg == "!ikuti" then
            if toggleAktif then
                followAllowed = true
                Library:Notify("Perintah !ikuti diterima, follow dimulai!", 3)
            else
                Library:Notify("Aktifkan toggle follow di UI dulu!", 3)
            end
        elseif msg == "!stop" then
            followAllowed = false
            if humanoid and myRootPart then
                humanoid:MoveTo(myRootPart.Position)
            end
            Library:Notify("Bot berhenti!", 3)
        end
    end)
end

-- Pantau semua pemain
for _, p in ipairs(Players:GetPlayers()) do
    setupClient(p)
end
Players.PlayerAdded:Connect(setupClient)

-- Update ulang saat respawn
localPlayer.CharacterAdded:Connect(updateBotRefs)
updateBotRefs()

-- Loop gerakan
task.spawn(function()
    while true do
        task.wait(0.5)
        if toggleAktif and followAllowed and client and client.Character and humanoid and myRootPart then
            local targetHRP = client.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                local followPos = targetHRP.Position - targetHRP.CFrame.LookVector * jarakIkut
                local dist = (myRootPart.Position - followPos).Magnitude
                if dist > jarakMinimum then
                    humanoid:MoveTo(followPos)
                end
            end
        end
    end
end)
