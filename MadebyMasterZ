-- ✅ Obsidian UI Setup
local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"
local Library = loadstring(game:HttpGet(repo .. "Library.lua"))()

local Options = Library.Options
local Toggles = Library.Toggles

Library.ForceCheckbox = false
Library.ShowToggleFrameInKeybinds = true

local Window = Library:CreateWindow({
    Title = "Made by MasterZ",
    Footer = "v1.0.0",
    Icon = 0,
    NotifySide = "Right",
    ShowCustomCursor = true,
})

local Tabs = {
    Main = Window:AddTab("Main", "user")
}

-- ✅ Global Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

local clientName = "bodyguardshoprblx"  -- Default client name
local jarakIkut = 5          -- Default follow distance
local jarakFormasi = 5       -- Formation distance
local jarakMinimum = 2
local toggleAktif = false
local followAllowed = false
local currentFormasiTarget = nil
local adminName = "bodyguardshoprblx"  -- Default admin name
local currentClientConnection = nil  -- Untuk menyimpan koneksi client saat ini

-- Individual bot settings
local botSettings = {
    ["8802945328"] = {followDistance = 5, minDistance = 2}, -- BotID1
    ["8802949363"] = {followDistance = 5, minDistance = 2}, -- BotID2
    ["8802939883"] = {followDistance = 5, minDistance = 2}, -- BotID3
    ["8802998147"] = {followDistance = 5, minDistance = 2}, -- BotID4
    ["8802991722"] = {followDistance = 5, minDistance = 2}  -- BotID5
}

local followConnection = nil
local loopTask = nil
local humanoid = nil
local myRootPart = nil
local client = nil

-- ✅ Reset & Stop Function
local function runStopCommand()
    followAllowed = false
    currentFormasiTarget = nil
    if humanoid and myRootPart then
        humanoid:MoveTo(myRootPart.Position)
    end
    Options.TextboxDisplayName:SetValue("")
    Options.TextboxFormasi1:SetValue("")
    Options.TextboxFormasi2:SetValue("")
    Options.TextboxFormasi3:SetValue("")
    Options.TextboxFormasi4:SetValue("")
    local args = { "leaveSync" }
    pcall(function()
        ReplicatedStorage:WaitForChild("Connections")
            :WaitForChild("dataProviders")
            :WaitForChild("animationHandler")
            :InvokeServer(unpack(args))
    end)
    
    local stopArgs = { "stopAnimation", "Push Up" }
    pcall(function()
        ReplicatedStorage:WaitForChild("Connections")
            :WaitForChild("dataProviders")
            :WaitForChild("animationHandler")
            :InvokeServer(unpack(stopArgs))
    end)
    
    Library:Notify("❌ Bot stopped & textboxes cleared", 3)
end

-- ✅ UI LEFT - Main Tab
local GroupBox1 = Tabs.Main:AddLeftGroupbox("Main Options")

GroupBox1:AddToggle("AktifkanFollow", {
    Text = "Enable Bot Follow",
    Default = false,
    Tooltip = "Enable to accept !ikuti commands",
    Callback = function(Value)
        toggleAktif = Value
        if Value then
            Library:Notify("Bot Follow Enabled", 3)
            if followConnection then followConnection:Disconnect() end
            if loopTask then loopTask:Disconnect() end
            if currentClientConnection then currentClientConnection:Disconnect() end
            setupBotFollowSystem()
        else
            Library:Notify("Bot Follow Disabled", 3)
            runStopCommand()
            if loopTask then loopTask:Disconnect() end
            if followConnection then followConnection:Disconnect() end
            if currentClientConnection then currentClientConnection:Disconnect() end
        end
    end,
})

GroupBox1:AddInput("NamaClientInput", {
    Default = "bodyguardshoprblx",
    Text = "Client Name",
    Placeholder = "Example: MasterZ_YT",
    Callback = function(Value)
        clientName = Value
        print("Client set to:", clientName)
    end,
})

GroupBox1:AddInput("AdminName", {
    Default = "bodyguardshoprblx",
    Text = "Admin Name",
    Placeholder = "bodyguardshoprblx",
    Callback = function(Value)
        adminName = Value
        print("Admin Name set to:", adminName)
    end,
})

-- Add Formation Distance Setting
GroupBox1:AddInput("JarakFormasiInput", {
    Default = "5",
    Text = "Formation Distance",
    Placeholder = "Example: 5",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then
            jarakFormasi = number
            Library:Notify("Formation distance set to: "..number, 3)
        end
    end,
})

-- ✅ GroupBox3 - Textboxes
local GroupBox3 = Tabs.Main:AddLeftGroupbox("Textbox")

GroupBox3:AddInput("TextboxDisplayName", {
    Default = "",
    Text = "Target DisplayName",
    Placeholder = "Empty",
    Callback = function(Value)
        print("DisplayName target:", Value)
    end,
})

GroupBox3:AddInput("TextboxFormasi1", {
    Default = "",
    Text = "Formation 1 Target",
    Placeholder = "Empty",
    Callback = function(Value)
        print("Formation 1 Target:", Value)
    end,
})

GroupBox3:AddInput("TextboxFormasi2", {
    Default = "",
    Text = "Formation 2 Target",
    Placeholder = "Empty",
    Callback = function(Value)
        print("Formation 2 Target:", Value)
    end,
})

GroupBox3:AddInput("TextboxFormasi3", {
    Default = "",
    Text = "Formation 3 Target",
    Placeholder = "Empty",
    Callback = function(Value)
        print("Formation 3 Target:", Value)
    end,
})

GroupBox3:AddInput("TextboxFormasi4", {
    Default = "",
    Text = "Formation 4 Target",
    Placeholder = "Empty",
    Callback = function(Value)
        print("Formation 4 Target:", Value)
    end,
})

-- ✅ UI RIGHT - Distance Settings
local GroupBox2 = Tabs.Main:AddRightGroupbox("Distance Settings")

GroupBox2:AddInput("JarakIkutInput", {
    Default = "5",
    Text = "Follow Distance",
    Placeholder = "Example: 5",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then
            jarakIkut = number
            Library:Notify("Follow distance set to: "..number, 3)
        end
    end,
})

GroupBox2:AddInput("JarakMinimumInput", {
    Default = "2",
    Text = "Minimum Move Distance",
    Placeholder = "Example: 2",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then
            jarakMinimum = number
            Library:Notify("Minimum distance set to: "..number, 3)
        end
    end,
})

-- ✅ Helper Functions
local function updateBotRefs()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
    myRootPart = character:WaitForChild("HumanoidRootPart")
end

local function fullRefresh()
    runStopCommand()
    task.wait(0.5)
    
    currentFormasiTarget = nil
    followAllowed = false
    
    if followConnection then followConnection:Disconnect() end
    if loopTask then loopTask:Disconnect() end
    if currentClientConnection then currentClientConnection:Disconnect() end
    
    if toggleAktif then
        setupBotFollowSystem()
    end
    
    Library:Notify("✅ System refreshed", 3)
end

-- ✅ Follow & Formation System
function setupBotFollowSystem()
    updateBotRefs()

    -- Function to handle admin commands
    local function handleAdminCommand(player, msg)
        if player.Name ~= adminName then return false end
        
        msg = msg:lower()
        local currentBotID = tostring(localPlayer.UserId)
        
        -- Handle !clientname [username] command
        if msg:match("^!clientname ") then
            local newName = msg:sub(12):gsub("^%s*(.-)%s*$", "%1")
            if newName ~= "" then
                -- Disconnect previous client connection
                if currentClientConnection then
                    currentClientConnection:Disconnect()
                    currentClientConnection = nil
                end
                
                -- Stop the bot
                runStopCommand()
                
                -- Update client name
                clientName = newName
                Options.NamaClientInput:SetValue(newName)
                Library:Notify("Admin changed client name to: "..newName, 5)
                
                -- Setup new client connection
                for _, p in ipairs(Players:GetPlayers()) do
                    if p.Name == newName then
                        setupClient(p)
                        break
                    end
                end
                
                return true
            else
                Library:Notify("❌ Client name cannot be empty", 3)
                return true
            end
        end
        
        -- Handle other admin commands...
        -- [Kode lainnya tetap sama]
        
        return false
    end

    local function setupClient(player)
        if player.Name ~= clientName then return end
        client = player

        -- Disconnect previous connection if exists
        if currentClientConnection then
            currentClientConnection:Disconnect()
        end

        currentClientConnection = player.Chatted:Connect(function(msg)
            -- Check admin commands first
            if handleAdminCommand(player, msg) then return end
            
            msg = msg:lower()
            local hrp = client.Character and client.Character:FindFirstChild("HumanoidRootPart")
            if not hrp then return end

            -- [Kode command handling tetap sama]
            if msg == "!stop" then
                runStopCommand()
            elseif msg == "!refresh" then
                fullRefresh()
            elseif msg == "!gabung" then
                followAllowed = false
                Library:Notify("!gabung command received. Syncing...", 4)
                local args = { "sync", client.UserId }
                local success, err = pcall(function()
                    ReplicatedStorage:WaitForChild("Connections")
                        :WaitForChild("dataProviders")
                        :WaitForChild("commandHandler")
                        :InvokeServer(unpack(args))
                end)
                if success then
                    Library:Notify("✅ Bot joined client ID: " .. client.UserId, 3)
                else
                    Library:Notify("❌ Sync failed", 3)
                end
            -- [Dan seterusnya...]
        end)
    end

    -- Handle existing admin and client
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name == adminName then
            player.Chatted:Connect(function(msg)
                handleAdminCommand(player, msg)
            end)
        end
        if player.Name == clientName then
            setupClient(player)
        end
    end

    -- Handle new players joining
    Players.PlayerAdded:Connect(function(player)
        if player.Name == adminName then
            player.Chatted:Connect(function(msg)
                handleAdminCommand(player, msg)
            end)
        end
        if player.Name == clientName then
            setupClient(player)
        end
    end)

    localPlayer.CharacterAdded:Connect(updateBotRefs)

    loopTask = RunService.Heartbeat:Connect(function()
        if followAllowed and toggleAktif and currentFormasiTarget and currentFormasiTarget.Character and humanoid and myRootPart then
            local targetHRP = currentFormasiTarget.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                local currentBotID = tostring(localPlayer.UserId)
                local settings = botSettings[currentBotID] or {followDistance = jarakIkut, minDistance = jarakMinimum}
                
                local followPos = targetHRP.Position - targetHRP.CFrame.LookVector * settings.followDistance
                local dist = (myRootPart.Position - followPos).Magnitude
                if dist > settings.minDistance then
                    myRootPart.CFrame = CFrame.lookAt(myRootPart.Position, targetHRP.Position)
                    humanoid:MoveTo(followPos)
                end
            end
        end
    end)
end
