-- ✅ Obsidian UI Setup
local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"

-- Load Library safely
local success, Library = pcall(function()
    return loadstring(game:HttpGet(repo .. "Library.lua"))()
end)

if not success or not Library then
    warn("❌ Failed to load Library.lua. Check your executor and URL.")
    return
end

local Options = Library.Options

Library.ForceCheckbox = false
Library.ShowToggleFrameInKeybinds = true

local Window = Library:CreateWindow({
    Title = "Made by MasterZ",
    Footer = "v21.0.0",
    Icon = 0,
    NotifySide = "Right",
    ShowCustomCursor = true,
})

local Tabs = {
    Main = Window:AddTab("Main", "user")
}

-- ✅ Global Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer

local clientName = "FiestaGuardVip"
local jarakIkut = 5
local jarakFormasi = 5
local jarakMinimum = 2
local toggleAktif = false
local followAllowed = false
local currentFormasiTarget = nil
local currentFormation = nil

local followConnection = nil
local loopTask = nil
local humanoid = nil
local myRootPart = nil
local client = nil

-- ✅ Reset & Stop Function
local function runStopCommand()
    followAllowed = false
    currentFormasiTarget = nil
    currentFormation = nil
    if humanoid and myRootPart then
        humanoid:MoveTo(myRootPart.Position)
    end
    Options.TextboxDisplayName:SetValue("")
    Options.TextboxFormasi1:SetValue("")
    Options.TextboxFormasi2:SetValue("")
    Library:Notify("❌ Bot stopped & textboxes cleared", 3)
end

-- ✅ Restart Bot Function
local function restartBot()
    runStopCommand()
    if followConnection then followConnection:Disconnect() end
    if loopTask then loopTask:Disconnect() end
    task.wait(0.5)
    if toggleAktif then
        setupBotFollowSystem()
        Library:Notify("✅ Bot restarted with client: "..clientName, 5)
    end
end

-- ✅ UI Setup
local GroupBox1 = Tabs.Main:AddLeftGroupbox("Main Options")

GroupBox1:AddToggle("AktifkanFollow", {
    Text = "Enable Bot Follow",
    Default = false,
    Tooltip = "Enable to accept !ikuti commands",
    Callback = function(Value)
        toggleAktif = Value
        if Value then
            Library:Notify("Bot Follow Enabled", 3)
            if followConnection then followConnection:Disconnect() end
            if loopTask then loopTask:Disconnect() end
            setupBotFollowSystem()
        else
            Library:Notify("Bot Follow Disabled", 3)
            runStopCommand()
        end
    end,
})

GroupBox1:AddInput("JarakFormasiInput", {
    Default = "5",
    Text = "Formation Distance",
    Placeholder = "Example: 5",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then
            jarakFormasi = number
            Library:Notify("Formation distance set to: "..number, 3)
        end
    end,
})

-- ✅ Textboxes
local GroupBox3 = Tabs.Main:AddLeftGroupbox("Textbox")
GroupBox3:AddInput("TextboxDisplayName", {Default = "", Text = "Target DisplayName", Placeholder = "Empty", Callback = function() end})
GroupBox3:AddInput("TextboxFormasi1", {Default = "", Text = "Formation 1 Target", Placeholder = "Empty", Callback = function() end})
GroupBox3:AddInput("TextboxFormasi2", {Default = "", Text = "Formation 2 Target", Placeholder = "Empty", Callback = function() end})

-- ✅ Distance Settings
local GroupBox2 = Tabs.Main:AddRightGroupbox("Distance Settings")
GroupBox2:AddInput("JarakIkutInput", {
    Default = "5",
    Text = "Follow Distance",
    Placeholder = "Example: 5",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then jarakIkut = number Library:Notify("Follow distance set to: "..number, 3) end
    end,
})
GroupBox2:AddInput("JarakMinimumInput", {
    Default = "2",
    Text = "Minimum Move Distance",
    Placeholder = "Example: 2",
    Callback = function(Value)
        local number = tonumber(Value)
        if number then jarakMinimum = number Library:Notify("Minimum distance set to: "..number, 3) end
    end,
})

-- ✅ Helper Functions
local function updateBotRefs()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
    myRootPart = character:WaitForChild("HumanoidRootPart")
    print("DEBUG: Humanoid and RootPart ready")
end

local function fullRefresh()
    runStopCommand()
    task.wait(0.5)
    if followConnection then followConnection:Disconnect() end
    if loopTask then loopTask:Disconnect() end
    if toggleAktif then setupBotFollowSystem() end
    Library:Notify("✅ System refreshed", 3)
end

local function getFormationPosition(targetHRP, formationType)
    local uid = tostring(localPlayer.UserId)
    local formasi = {}
    if formationType == "formasi1" then
        formasi = {
            ["8802945328"] = targetHRP.Position + targetHRP.CFrame.LookVector * jarakFormasi,
            ["8802949363"] = targetHRP.Position + targetHRP.CFrame.RightVector * jarakFormasi,
            ["8802939883"] = targetHRP.Position + targetHRP.CFrame.RightVector * -jarakFormasi,
            ["8802998147"] = targetHRP.Position + targetHRP.CFrame.LookVector * -jarakFormasi,
            ["8802991722"] = targetHRP.Position
        }
    elseif formationType == "formasi2" then
        local diagonal = jarakFormasi * 0.7071
        formasi = {
            ["8802945328"] = targetHRP.Position + targetHRP.CFrame.LookVector * diagonal + targetHRP.CFrame.RightVector * diagonal,
            ["8802949363"] = targetHRP.Position + targetHRP.CFrame.LookVector * diagonal + targetHRP.CFrame.RightVector * -diagonal,
            ["8802939883"] = targetHRP.Position + targetHRP.CFrame.LookVector * -diagonal + targetHRP.CFrame.RightVector * diagonal,
            ["8802998147"] = targetHRP.Position + targetHRP.CFrame.LookVector * -diagonal + targetHRP.CFrame.RightVector * -diagonal,
            ["8802991722"] = targetHRP.Position
        }
    end
    return formasi[uid]
end

-- ✅ Setup Follow System
function setupBotFollowSystem()
    updateBotRefs()

    -- Wait until client joins
    local function waitForClient(name)
        local p = Players:FindFirstChild(name)
        if not p then
            repeat task.wait(0.5) p = Players:FindFirstChild(name) until p
        end
        return p
    end

    client = waitForClient(clientName)

    -- Connect Chatted
    followConnection = client.Chatted:Connect(function(msg)
        msg = msg:lower()
        local hrp = client.Character and client.Character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end

        if msg == "!stop" then
            runStopCommand()
        elseif msg == "!refresh" then
            fullRefresh()
        elseif msg == "!ikuti" then
            if client and client.Character and client.Character:FindFirstChild("HumanoidRootPart") then
                followAllowed = true
                currentFormasiTarget = client
                print("DEBUG: !ikuti received, following client")
                Options.TextboxDisplayName:SetValue(client.DisplayName)
                Library:Notify("Bot following main client: "..client.DisplayName, 3)
            end
        elseif msg:match("^!formasi[12]") then
            runStopCommand()
            local formasiCmd = msg:match("^!(formasi[12])")
            currentFormasiTarget = client
            local pos = getFormationPosition(hrp, formasiCmd)
            if pos then
                currentFormation = formasiCmd
                humanoid:MoveTo(pos)
                if formasiCmd == "formasi1" then Options.TextboxFormasi1:SetValue(client.DisplayName)
                else Options.TextboxFormasi2:SetValue(client.DisplayName) end
                Library:Notify("✅ Formation set: "..formasiCmd, 3)
            end
        end
    end)

    -- Heartbeat Loop
    loopTask = RunService.Heartbeat:Connect(function()
        if toggleAktif then print("DEBUG: Heartbeat running") end
        if toggleAktif and followAllowed and currentFormasiTarget and currentFormasiTarget.Character and humanoid and myRootPart then
            local targetHRP = currentFormasiTarget.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                if currentFormation then
                    local pos = getFormationPosition(targetHRP, currentFormation)
                    if pos and (myRootPart.Position - pos).Magnitude > jarakMinimum then
                        myRootPart.CFrame = CFrame.lookAt(myRootPart.Position, targetHRP.Position)
                        humanoid:MoveTo(pos)
                    end
                else
                    local followPos = targetHRP.Position - targetHRP.CFrame.LookVector * jarakIkut
                    if (myRootPart.Position - followPos).Magnitude > jarakMinimum then
                        myRootPart.CFrame = CFrame.lookAt(myRootPart.Position, targetHRP.Position)
                        humanoid:MoveTo(followPos)
                    end
                end
            end
        end
    end)

    localPlayer.CharacterAdded:Connect(updateBotRefs)
end
